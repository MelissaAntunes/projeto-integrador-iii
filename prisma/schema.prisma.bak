// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String   
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

enum Status {
  ativo
  inativo
}

model Company {
  id                  String                @id @default(uuid())
  name                String                @db.VarChar(255)
  logo_url            String
  description         String                @db.Text
  email               String                @db.VarChar(255)
  phone               String                @db.VarChar(255)
  website             String                @db.VarChar(255)
  address             String                @db.VarChar(255)
  status              Status                @default(ativo)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  businessAreas       CompanyBusinessArea[]
  keywords            CompanyKeyword[]

  @@map("companies")
}

model BusinessArea {
  id          String                @id @default(uuid())
  name        String                @db.VarChar(255)
  description String                @db.Text
  companies   CompanyBusinessArea[]

  @@map("business_areas")
}

model CompanyBusinessArea {
  id            String      @id @default(uuid())
  company       Company     @relation(fields: [companyId], references: [id])
  companyId     String
  businessArea  BusinessArea @relation(fields: [businessAreaId], references: [id])
  businessAreaId String

  @@map("company_business_areas")
}

model Keyword {
  id        String          @id @default(uuid())
  name      String          @unique
  companies CompanyKeyword[]

  @@map("keywords")
}

model CompanyKeyword {
  id        String  @id @default(uuid())
  name      String? @unique
  company   Company @relation(fields: [companyId], references: [id])
  companyId String
  keyword   Keyword @relation(fields: [keywordId], references: [id])
  keywordId String

  @@map("company_keywords")
}
